ROLE_MAPPING = {
    "Minor": lambda age: age < 18,
    "Adult": lambda age: 18 <= age <= 60,
    "Senior": lambda age: age > 60
}

class User:
    def __init__(self, name, email, password, age):
        self.name = name
        self.email = email
        self.password = password
        self.age = age
        self.role = self.assign_role()

    def assign_role(self):
        return next((role for role, condition in ROLE_MAPPING.items() if condition(self.age)), "Unknown")

    def update(self, name, password, age):
        self.name = name
        self.password = password
        self.age = age
        self.role = self.assign_role()

    def __str__(self):
        return f"Name: {self.name}, Email: {self.email}, Age: {self.age}, Role: {self.role}"

class UserManager:
    def __init__(self):
        self.users = []

    def register_user(self):
        name = input("Enter name: ")
        email = input("Enter email: ")
        password = input("Enter password: ")
        age = int(input("Enter age: "))
        self.users.append(User(name, email, password, age))
        print("User Registered!")

    def display_users(self):
        if not self.users:
            print("No users found.")
            return
        print("\n--- User List ---")
        for user in self.users:
            print(user)

    def update_user(self):
        email = input("Enter email to update: ")
        for user in self.users:
            if user.email == email:
                name = input("Enter new name: ")
                password = input("Enter new password: ")
                age = int(input("Enter new age: "))
                user.update(name, password, age)
                print("User Updated!")
                return
        print("User not found!")

    def delete_user(self):
        email = input("Enter email to delete: ")
        self.users = [user for user in self.users if user.email != email]
        print("User Deleted!")

def main():
    manager = UserManager()
    actions = {
        "1": manager.register_user,
        "2": manager.display_users,
        "3": manager.update_user,
        "4": manager.delete_user,
        "5": lambda: exit("Exiting...")
    }
    
    while True:
        print("\n1. Register User\n2. Display Users\n3. Update User\n4. Delete User\n5. Exit")
        action = actions.get(input("Enter choice: "), lambda: print("Invalid choice, try again."))
        action()

main()
